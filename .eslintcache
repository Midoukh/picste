[{"C:\\Users\\uw\\Desktop\\site\\picste\\src\\index.js":"1","C:\\Users\\uw\\Desktop\\site\\picste\\src\\reportWebVitals.js":"2","C:\\Users\\uw\\Desktop\\site\\picste\\src\\App.js":"3","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Containers\\Layout\\Layout.jsx":"4","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\Toolbar.jsx":"5","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Logo\\Logo.jsx":"6","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\NavigationItems\\NavigationItems.jsx":"7","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.jsx":"8","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\SearchBar\\SearchBar.jsx":"9","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Presentation\\Presentation.jsx":"10","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\Signin\\Button.jsx":"11","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Backdrop\\Backdrop.jsx":"12","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Presentation\\Trailer\\Trailer.jsx":"13","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Modal\\Modal.jsx":"14","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Movies\\Genre\\Genre.jsx":"15","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Rating\\Rating.jsx":"16","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\MoviesList\\Latest\\Latest.jsx":"17","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\MoviesList\\Movie\\movie.jsx":"18","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\TvList\\Tv.jsx":"19","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Spinner.jsx":"20","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\LoveButton\\LoveButton.jsx":"21","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Gallery\\Gallery.jsx":"22","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\SideBar.jsx":"23","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\SideMenu\\SideMenu.jsx":"24","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\NavigationItemMob\\NavigationItemMob.jsx":"25","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\MobileMenu.jsx":"26","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\SearchBar\\SearchBar.jsx":"27","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\Signin\\Button.jsx":"28","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Favourite\\Favourite.jsx":"29","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Banner\\Banner.jsx":"30","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Containers\\Layout\\WatchPage\\WatchPage.jsx":"31","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Flair\\Flair.jsx":"32","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Button\\Button.jsx":"33","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\LoadingProgress\\LoadingProgress.jsx":"34","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Movies\\Languages\\Languages.jsx":"35","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\ByLanguages\\ByLanguages.jsx":"36"},{"size":500,"mtime":499162500000,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":545,"mtime":1614780855396,"results":"40","hashOfConfig":"38"},{"size":3537,"mtime":1615060351830,"results":"41","hashOfConfig":"38"},{"size":1137,"mtime":1614081980562,"results":"42","hashOfConfig":"38"},{"size":460,"mtime":1613327352597,"results":"43","hashOfConfig":"38"},{"size":384,"mtime":1613909474536,"results":"44","hashOfConfig":"38"},{"size":1376,"mtime":1615050171497,"results":"45","hashOfConfig":"38"},{"size":645,"mtime":1613840857985,"results":"46","hashOfConfig":"38"},{"size":6301,"mtime":1615044143048,"results":"47","hashOfConfig":"38"},{"size":246,"mtime":1612191254735,"results":"48","hashOfConfig":"38"},{"size":313,"mtime":1612818706388,"results":"49","hashOfConfig":"38"},{"size":684,"mtime":1613757793490,"results":"50","hashOfConfig":"38"},{"size":1317,"mtime":1613751400728,"results":"51","hashOfConfig":"38"},{"size":1653,"mtime":1615039029612,"results":"52","hashOfConfig":"38"},{"size":1048,"mtime":1615044105889,"results":"53","hashOfConfig":"38"},{"size":3621,"mtime":1615045993921,"results":"54","hashOfConfig":"38"},{"size":1936,"mtime":1615061044073,"results":"55","hashOfConfig":"38"},{"size":3298,"mtime":1614790423173,"results":"56","hashOfConfig":"38"},{"size":3321,"mtime":1613246242633,"results":"57","hashOfConfig":"38"},{"size":996,"mtime":1614186271959,"results":"58","hashOfConfig":"38"},{"size":2519,"mtime":1613745446659,"results":"59","hashOfConfig":"38"},{"size":1119,"mtime":1613910359063,"results":"60","hashOfConfig":"38"},{"size":419,"mtime":1613905067520,"results":"61","hashOfConfig":"38"},{"size":1624,"mtime":1613911764311,"results":"62","hashOfConfig":"38"},{"size":809,"mtime":1614180645170,"results":"63","hashOfConfig":"38"},{"size":651,"mtime":1614019676351,"results":"64","hashOfConfig":"38"},{"size":246,"mtime":1614019567365,"results":"65","hashOfConfig":"38"},{"size":5057,"mtime":1614784783044,"results":"66","hashOfConfig":"38"},{"size":421,"mtime":1614197897207,"results":"67","hashOfConfig":"38"},{"size":6451,"mtime":1614863377349,"results":"68","hashOfConfig":"38"},{"size":224,"mtime":1614819608728,"results":"69","hashOfConfig":"38"},{"size":362,"mtime":1614824650199,"results":"70","hashOfConfig":"38"},{"size":843,"mtime":1614863231460,"results":"71","hashOfConfig":"38"},{"size":2233,"mtime":1615057291236,"results":"72","hashOfConfig":"38"},{"size":2891,"mtime":1615061040791,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"k5vxdb",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\uw\\Desktop\\site\\picste\\src\\index.js",[],["161","162"],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\reportWebVitals.js",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\App.js",["163","164","165","166","167"],"import React, {Component, useState, useEffect} from 'react'\nimport Layout from './Containers/Layout/Layout'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    hideText: true\n  }\n  toggleHideTxt = () => {\n    let newVal = !this.state.hideText\n    this.setState({hideText: newVal})\n    \n  }\n  \n\n  render(){\n    return (\n          <Router>\n            <main className=\"App\">\n              <Layout />\n            </main>\n          </Router>\n  );\n }\n}\n\nexport default App;\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Containers\\Layout\\Layout.jsx",["168","169","170","171"],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\Toolbar.jsx",["172","173","174"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport Button from '../Signin/Button'\r\nimport Favourite from '../../../Assets/Images/white-heart.svg'\r\nimport mobile from '../../../Assets/Images/menu (1).svg'\r\nconst Toolbar = ({ handleShowMobileMenu, showMobMenu })  => {\r\n    const history = useHistory()\r\n   \r\n    return (\r\n        <div className={classes.Toolbar}>\r\n            <Logo height=\"45px\"/>\r\n            <NavigationItems show={false}/>\r\n            <SearchBar />\r\n            <img \r\n            className={classes.Favourite}\r\n            src={Favourite}\r\n            onClick={() => history.push('/favourite')}\r\n            />         \r\n            <img \r\n            className={classes.Mobile} \r\n            src={mobile} alt=\"Mobile menu\"\r\n            onClick={handleShowMobileMenu}\r\n            />\r\n            <Button content=\"Sign in\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Logo\\Logo.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\NavigationItems\\NavigationItems.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.jsx",["175","176","177","178","179"],"import React, { useState, useRef } from 'react'\r\nimport Genre from '../../../Movies/Genre/Genre'\r\nimport Languages from '../../../Movies/Languages/Languages'\r\nimport classes from './NavigationItem.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst NavigationItem = ({ show }) => {\r\n    const [showGenre, setShowGenre] = useState(false)\r\n    const history = useHistory()\r\n    const menuRef = useRef()\r\n    \r\n    const handleShowGenreLists = () =>{\r\n        setShowGenre(prev => prev = !prev)\r\n        console.log('show genre')\r\n    }\r\n    const handleHideGenreLists = () => {\r\n        setShowGenre(prev => prev = !prev)\r\n\r\n    }\r\n    const handleShowLatestMovies = () => {\r\n        history.push('/latest')\r\n    }\r\n    const handleShowTVShows = () => {\r\n        history.push('/tv')\r\n    }\r\n    \r\n    const items = [\r\n       \r\n        {name: 'Populaire', func: handleShowLatestMovies},\r\n        {name: 'TV', func: handleShowTVShows}\r\n    ]\r\n\r\n    //hide in toolbar when width is 629px or less\r\n    //show in sidebar when with is 629px or less\r\n\r\n  \r\n    return (\r\n        <ul className={classes.NavigationItem}>\r\n            <Genre />\r\n            {items.map((item, i) => (\r\n                <li key={item.name+i} onClick={item.func}>{item.name}</li>  \r\n            ))}\r\n            <Languages />\r\n        </ul>\r\n    )\r\n\r\n    }\r\n\r\n\r\nexport default NavigationItem\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\SearchBar\\SearchBar.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Presentation\\Presentation.jsx",["180","181","182"],"import React, {Component, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport classes from './Presentation.css'\r\nimport Rating from '../Rating/Rating'\r\nimport Trailer from './Trailer/Trailer'\r\nimport Modal from '../Modal/Modal'\r\nimport LoveButton from '../../UI/LoveButton/LoveButton'\r\nimport Gallery from '../Gallery/Gallery'\r\nimport Banner from '../Banner/Banner'\r\n\r\nclass Presentation extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            homeMovie: {},\r\n            movies: [],\r\n            loading: true,\r\n            data: null,\r\n            error: null,\r\n            randomNum: 1,\r\n            trailerPath: null,\r\n            showModal: false\r\n        }\r\n    }\r\n    handleFetchHomeMovie = async () => {\r\n        const randomMovie = Math.floor(Math.random() * 11)\r\n        const latestMovieEndPoint = 'https://api.themoviedb.org/3/movie/popular?api_key='\r\n\r\n        const res = axios.get(`${latestMovieEndPoint}${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US&page=1`)\r\n        .then(data => {\r\n          this.setState({ movies: data.data.results })\r\n\r\n          this.setState({ homeMovie: data.data.results[randomMovie] })\r\n          const movieId = data.data.results[randomMovie].id\r\n          const trailerEndpoint = `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}`\r\n          //find the trailer key\r\n          axios.get(trailerEndpoint)\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({trailerPath: res.data.results[0].key})\r\n                console.log(res)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })        \r\n  \r\n        })\r\n        .catch(error => console.log(error))\r\n\r\n      }\r\n \r\n    //only want this page to rerender when reload\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.hideText === this.props.hideText\r\n    }\r\n    \r\n    handleFavouriteMovie = (id) => {\r\n        let newVal = !this.state.movie.favourite\r\n        const previousMovies = JSON.parse(localStorage.getItem('favourites'))\r\n        if (previousMovies){\r\n            const updatedFavouriteMovies = [...previousMovies ,{id: id, favourite: newVal, createdAt: new Date(), type: 'movie'}]\r\n \r\n            localStorage.setItem('favourites',\r\n            JSON.stringify(updatedFavouriteMovies))\r\n            console.log(updatedFavouriteMovies)\r\n        }\r\n        else{\r\n            localStorage.setItem('favourites', JSON.stringify([{id: id, favourite: newVal, createdAt: new Date(), type: 'movie'}]))\r\n        }\r\n      \r\n        this.setState({ movie: { favourite: newVal}})\r\n    \r\n    }\r\n    handleCheckIfFavourite = (id) => {\r\n        //return boolean\r\n        const favouriteMovies = JSON.parse(localStorage.getItem('favourites'))\r\n        let isFavourite = false\r\n        if (favouriteMovies){\r\n\r\n            favouriteMovies.forEach(item => {\r\n                if (item.id === id){\r\n                    isFavourite = item.favourite\r\n                }\r\n            })\r\n        }\r\n        return isFavourite\r\n\r\n    }\r\n    displayTrailer = () => {\r\n        const newVal = !this.state.showModal\r\n\r\n        this.setState({ showModal: newVal })\r\n  \r\n    }\r\n    componentDidMount() {\r\n        //fetch a trailer for the home page movie\r\n        this.handleFetchHomeMovie()\r\n        this.handleCheckIfFavourite()\r\n    }\r\n    \r\n    render(){\r\n        //a new movie with each new reload\r\n        const movie = this.state.homeMovie\r\n        const movies = this.state.movies\r\n        const toggleHideTxt = this.props.toggleHideTxt\r\n        const handleDescription = this.props.handleDescription\r\n       \r\n        \r\n        //fetching media for a specific \r\n        const imageBoiler = 'https://image.tmdb.org/t/p/w500/'\r\n        const trailerBoiler = 'https://www.youtube.com/embed/'\r\n        \r\n  \r\n    //movie informations\r\n    const homeMovie = movie && {\r\n        title: movie.original_title,\r\n        averageVote: movie.vote_average,\r\n        overview: handleDescription(movie.overview),\r\n        longOverview: movie.overview,\r\n        year: String(movie.release_date).slice(0, 4),\r\n        poster: movie.poster_path,\r\n        backPath: movie.backdrop_path,\r\n        id: movie.id\r\n    }\r\n    //this function is for minifying the description in case its to long to fit\r\n    console.log(trailerBoiler + this.state.trailerPath)\r\n    return (\r\n        homeMovie?\r\n        <main>\r\n        {this.state.showModal &&\r\n        <Modal \r\n        trailerURL={trailerBoiler + this.state.trailerPath} \r\n        displayTrailer={this.displayTrailer}>\r\n\r\n        </Modal>\r\n        }\r\n        <div className={classes.Presentation} \r\n            style={{backgroundImage: homeMovie.poster && `url(${imageBoiler}${homeMovie.poster})`, marginTop: this.props.showModal && '0px'}}>\r\n            <div className={classes.Details}>\r\n                <div className={classes.DetailsTxt}>\r\n\r\n                <div className={classes.Love}>\r\n                    <h1>{homeMovie.title}</h1>\r\n                    <LoveButton \r\n                    setLove={this.handleFavouriteMovie} \r\n                    love={this.handleCheckIfFavourite(homeMovie.id)} \r\n                    id={homeMovie.id}/>\r\n\r\n                </div>\r\n                {homeMovie.averageVote && <Rating ratingAvg={homeMovie.averageVote} year={homeMovie.year} height=\"35px\"/>}\r\n                <div onClick={(e) =>toggleHideTxt(e, homeMovie.longOverview, homeMovie.overview)}>\r\n                    <p>\r\n                        {homeMovie.overview}\r\n                    </p>\r\n                    {this.props.longDescription? \r\n                    <span id=\"read_more\">Read more</span>: null}\r\n                </div>\r\n               \r\n                </div>\r\n                <Trailer \r\n                thumbnail={imageBoiler + homeMovie.poster} \r\n                displayTrailer={this.displayTrailer}\r\n                />\r\n            </div>\r\n            <Gallery movies={movies.slice(0, 10)} label={\"The Best Films\"}/>\r\n            <Gallery movies={movies.slice(10)} label={\"Trending\"} handleFavouriteMovie={this.handleFavouriteMovie}/>\r\n            <Banner />\r\n\r\n        </div> \r\n        </main>: 'loading...'\r\n    )\r\n }\r\n\r\n}\r\n\r\nexport default Presentation","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\Signin\\Button.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Backdrop\\Backdrop.jsx",["183"],"import React from 'react'\r\nimport classes from './Backdrop.css'\r\nconst Backdrop = (props) =>{\r\n    const imageBoiler = 'https://image.tmdb.org/t/p/w500/'\r\n\r\n    return (\r\n        <div className={classes.Backdrop} onClick={props.displayTrailer}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Presentation\\Trailer\\Trailer.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Modal\\Modal.jsx",["184","185","186"],"import React from 'react'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport classes from './Modal.css'\r\nimport exit from '../../Assets/Images/cancel.svg'\r\nimport loading from '../../Assets/Images/loading.svg'\r\nclass Modal extends React.Component{\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        console.log('modal shouldComponentUpdate')\r\n        return true\r\n        // console.log(previousProps.trailerURL === this.props.trailerURL)\r\n        // return previousProps.trailerURL === this.props.trailerURL\r\n    }\r\n    render(){\r\n        console.log(this.props.trailerURL)\r\n        let trailer =  (\r\n            <div className={classes.Sorry}>\r\n                <p>Sorry Trailer is not available :(</p>\r\n            </div>\r\n                      )\r\n\r\n        if (this.props.trailerURL){\r\n            trailer = <iframe src={this.props.trailerURL} frameBorder=\"0\"></iframe>\r\n        }\r\n\r\n        let loadingTrailer = (\r\n           <img className={classes.Spinner} src={loading}/>\r\n        )\r\n        return(\r\n            \r\n            <div className={classes.Modal}>\r\n            <img src={exit} alt=\"exit modal\" onClick={this.props.displayTrailer}/>\r\n            {trailer}\r\n            <Backdrop displayTrailer={this.props.displayTrailer}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Modal","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Movies\\Genre\\Genre.jsx",["187","188","189"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport classes from './Genre.css'\r\nimport axios from 'axios'\r\nimport Dropdown from 'rc-dropdown'\r\nconst Genre = ({ setShowGenre, showGenre }) =>{\r\n    const genresListRef = useRef()\r\n    const [genres, setGenres] = useState([])\r\n    const genresURL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US`\r\n    const handleFetchGenres = async() => {\r\n        const response = await axios(genresURL)\r\n        .then(res => {\r\n            setGenres(prev => prev = res.data.genres)\r\n        })\r\n        .catch(err => console.log(err))\r\n       \r\n    }\r\n    \r\n    useEffect(() => {\r\n        handleFetchGenres()\r\n    }, [])\r\n    const handleShowListOfGenres = () => {\r\n        const show = 'block'\r\n    \r\n        genresListRef.current.style.display = show\r\n\r\n    }\r\n    const handleHideListOfGenres = () => {\r\n        const hide = 'none'\r\n    \r\n        genresListRef.current.style.display = hide\r\n\r\n    }\r\n    return (\r\n \r\n        <li \r\n         onMouseOver={handleShowListOfGenres}\r\n         className={classes.Genres}>\r\n            <>\r\n            <li className={classes.label}>\r\n                Genres <i style={{ marginLeft: '.5rem' }} className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n            </li>\r\n            <ul className={classes.listGenre} ref={genresListRef} onMouseLeave={handleHideListOfGenres}>\r\n            {genres.map((genre, i) => {\r\n                return <li key={genre.id+i*10}>{genre.name}</li> \r\n      \r\n            })}\r\n            </ul>\r\n            </>\r\n        </li>\r\n  \r\n \r\n    )\r\n}\r\n\r\nexport default Genre\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Rating\\Rating.jsx",["190","191"],"import React, {useEffect, useRef} from 'react'\r\nimport imbd from '../../Assets/Images/imdb.png'\r\nimport classes from './Rating.css'\r\nconst Rating = (props) =>{\r\n    \r\n    const innerStartRef = useRef()\r\n    const handleRatingStar = (rating) => {\r\n        //get percentage value from the rating\r\n            const START_TOTAL = 5\r\n            const START_PERCENTAGE = ((rating/2)/START_TOTAL)*100\r\n            //round\r\n            const startRounded = `${Math.round(START_PERCENTAGE/10)*10}%`\r\n            //set width of inner start to percentage\r\n            innerStartRef.current.style.width = startRounded\r\n    }\r\n    useEffect(() => {\r\n        handleRatingStar(props.ratingAvg)\r\n    }, [])\r\n    return (\r\n        <div className={classes.Rating}>\r\n            <img src={imbd} style={{height: props.height}}/>\r\n            <div className={classes.StartOuter}>\r\n                <div className={classes.StartInner} ref={innerStartRef}></div>\r\n            </div>\r\n            <h4>{props.year}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\MoviesList\\Latest\\Latest.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\MoviesList\\Movie\\movie.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\TvList\\Tv.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Spinner.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\LoveButton\\LoveButton.jsx",["192","193"],"import React, {useState, useRef} from 'react'\r\nimport classes from './LoveButton.css'\r\nimport emptyHeart from '../../Assets/Images/empty-heart.svg'\r\nimport filledHeart from '../../Assets/Images/filled-heart.svg'\r\n\r\nconst LoveButton = ({ setLove, love, id }) => {\r\n    const[added, setAdded] = useState(false)\r\n   \r\n    let isLoved = emptyHeart\r\n    let addedMessage = <span>Added to Favourites!</span>\r\n        \r\n    if (love === true){\r\n        isLoved = filledHeart \r\n    }\r\n    else if (love === false){\r\n        isLoved = emptyHeart \r\n    }\r\n   \r\n    return (\r\n    <div className={classes.Heart}>\r\n        {added? <span className={classes.added}>Added to Favourites!</span>: null}\r\n       {love === true || love === false?<img\r\n       onClick={() =>{\r\n            setLove(id)\r\n            setAdded(prev => prev = !prev)\r\n       }} \r\n       src={isLoved} \r\n       alt=\"love\" \r\n       height=\"30px\" \r\n       title=\"Add to favourite!\"/>:null}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoveButton\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Gallery\\Gallery.jsx",["194"],"import React, {useRef, useState} from 'react'\r\nimport classes from './Gallery.css'\r\nimport right from '../../Assets/Images/right-arrow.svg'\r\nimport left from '../../Assets/Images/left-arrow.svg'\r\nimport Movie from '../MoviesList/Movie/movie'\r\n\r\nconst Gallery = ({ movies, label, handleFavouriteMovie }) => {\r\n    const galleryRef = useRef()\r\n    const leftArrowRef = useRef()\r\n    const[move, setMove] = useState(50)\r\n   \r\n    //what a gallery need to have\r\n    //items, left and right arrow to move the gallery\r\n    //the ability to drag and scroll\r\n    const handleMoveGallery = (e) => {\r\n        \r\n        if (galleryRef.current.scrollLeft !== 0){\r\n            leftArrowRef.current.style.display = 'block'\r\n        }\r\n        else if (galleryRef.current.scrollLeft === 0){\r\n            leftArrowRef.current.style.display = 'none'\r\n        }\r\n        \r\n        if (e.target.id === 'right'){\r\n            galleryRef.current.scrollLeft += move\r\n            // galleryRef.current.style.transform = `translateX(-${move}%)`\r\n        }\r\n        if (e.target.id === 'left'){\r\n            \r\n            // galleryRef.current.style.transform = `translateX(${move}%)`\r\n            galleryRef.current.scrollLeft -= move\r\n        \r\n        }\r\n        console.log(galleryRef.current.scrollLeft)\r\n    }\r\n    return (\r\n        <main className={classes.Gallery}>\r\n            <h3>{label}</h3>\r\n            <div className={classes.Items} ref={galleryRef}>\r\n                <div className={classes.InsideGal}>\r\n                {movies.map(mov => (\r\n                    <Movie \r\n                    key={mov.id}\r\n                    name={mov.original_name || mov.original_title}\r\n                    year={mov.release_date || mov.first_air_date}\r\n                    rating={mov.vote_average}\r\n                    poster={mov.poster_path}\r\n                    handleFavouriteMovie={handleFavouriteMovie}\r\n                    id={mov.id}\r\n                    />\r\n                ))}\r\n\r\n                </div>\r\n             \r\n            </div>\r\n            <img \r\n            src={right} \r\n            alt=\"right arrow\" \r\n            className={classes.right}\r\n            onClick={handleMoveGallery}\r\n            id=\"right\"\r\n            />\r\n            <img \r\n            src={left} \r\n            alt=\"right left\" \r\n            className={classes.left}\r\n            onClick={handleMoveGallery}\r\n            ref={leftArrowRef}\r\n            id=\"left\"\r\n\r\n            />\r\n\r\n\r\n        </main>\r\n    )\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nexport default Gallery","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\SideBar.jsx",["195"],"import React, {useState} from 'react'\r\nimport classes from './SideBar.css'\r\nimport SideMenu from './SideMenu/SideMenu'\r\nimport BackDrop from '../Backdrop/Backdrop'\r\nimport NavigationItemMob from './NavigationItemMob/NavigationItemMob'\r\nconst SideBar = () => {\r\n    const [showbar, setShowbar] = useState(false)\r\n    const integratedClasses = [classes.SideBar]\r\n    const handleOpenShowSideBar = () => {\r\n        console.log('side bar')\r\n        const newVal = true\r\n\r\n        setShowbar(prev => prev = newVal)\r\n    }\r\n    const handleCloseShowSideBar = () => {\r\n        console.log('side bar')\r\n        const newVal = false\r\n\r\n        setShowbar(prev => prev = newVal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <aside \r\n        className={showbar?[classes.SideBar, classes.show].join(' '): classes.SideBar}\r\n        onMouseLeave={handleCloseShowSideBar}\r\n        >\r\n            <NavigationItemMob />\r\n        </aside>\r\n        <SideMenu \r\n        handleOpenShowSideBar={handleOpenShowSideBar}\r\n        showbar={showbar}\r\n        />\r\n        {showbar && <BackDrop />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\SideBar\\NavigationItemMob\\NavigationItemMob.jsx",["196","197","198"],"import React, { useState, useRef } from 'react'\r\nimport Genre from '../../Movies/Genre/Genre'\r\nimport classes from './NavigationItemMob.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst NavigationItemMob = ({ show }) => {\r\n    const [showGenre, setShowGenre] = useState(false)\r\n    const history = useHistory()\r\n    const menuRef = useRef()\r\n    \r\n    const handleShowGenreLists = () =>{\r\n        setShowGenre(prev => prev = !prev)\r\n        console.log('show genre')\r\n    }\r\n    const handleHideGenreLists = () => {\r\n        setShowGenre(prev => prev = !prev)\r\n\r\n    }\r\n    const handleShowLatestMovies = () => {\r\n        history.push('/latest')\r\n    }\r\n    const handleShowTVShows = () => {\r\n        history.push('/tv')\r\n    }\r\n    const items = [\r\n        {name: 'Genre', func: handleShowGenreLists},\r\n        {name: 'Populaire', func: handleShowLatestMovies},\r\n        {name: 'TV', func: handleShowTVShows},\r\n        {name: 'Anime',func: true}\r\n    ]\r\n\r\n    //hide in toolbar when width is 629px or less\r\n    //show in sidebar when with is 629px or less\r\n\r\n  \r\n    return (\r\n        <ul className={classes.Menu}>\r\n            {items.map((item, i) => (\r\n                <ul className={classes.NavigationItem}\r\n                key={item.name+i}\r\n                onClick={item.func}\r\n                >\r\n                    <li>{item.name}</li>\r\n                    {showGenre && item.name === 'Genre'? <Genre setShowGenre={setShowGenre}/>: null}                       \r\n                </ul>\r\n            ))}\r\n            \r\n            \r\n        </ul>\r\n    )\r\n\r\n    }\r\n\r\n\r\nexport default NavigationItemMob\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\MobileMenu.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\SearchBar\\SearchBar.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Navigation\\ToolBar\\MobileMenu\\Signin\\Button.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Favourite\\Favourite.jsx",["199","200","201","202"],"import React, { useEffect, useState } from 'react'\r\nimport classes from './Favourite.css'\r\nimport love from '../../Assets/Images/heart (2).svg'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport Movie from '../MoviesList/Movie/movie'\r\nimport trash from '../../Assets/Images/rubbish-bin.svg'\r\nimport Spinner from '../../UI/Spinner'\r\n\r\nclass Favourite extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            list: [],\r\n            removed: false\r\n        }\r\n    }\r\n\r\n    handleGetStoredMovies = () => {\r\n        const movies = JSON.parse(localStorage.getItem('favourites'))\r\n        console.log(movies)\r\n        if (movies){\r\n            const uniqueMovies = movies.filter(mov => mov.favourite !== false)\r\n            const renderableMovies = Array.from(new Set(uniqueMovies.map(a => a.id)))\r\n            .map(id => {\r\n            return uniqueMovies.find(a => a.id === id)\r\n            })\r\n\r\n            const moviesList = renderableMovies.filter(mov => mov.type === 'movie')\r\n            const tvsList = renderableMovies.filter(tv => tv.type === 'tv')\r\n\r\n            this.fetchFevouriteMoviesAndTvs([...moviesList, ...tvsList])\r\n            // this.fetchFevouriteTvs(tvsList)\r\n\r\n        }\r\n    }\r\n    fetchFevouriteMoviesAndTvs = (list) => {\r\n        //check if there is any movies in the local storage before looping and fetching\r\n\r\n        list && list.forEach(item => {\r\n            console.log(item)\r\n            if (item.type === 'movie'){\r\n                const endPoint = `https://api.themoviedb.org/3/movie/${item.id}}?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US`\r\n                const res = axios.get(endPoint)\r\n                .then(data => {\r\n                        if (item.id ===data.data.id){\r\n                            data.data.createdAt = item.createdAt\r\n                            \r\n                        }\r\n                        this.setState({ list: [...this.state.list, data.data] })\r\n\r\n                    })\r\n                    .catch(err => console.log(err))\r\n\r\n                }\r\n            else if (item.type === 'tv') {\r\n                const endPoint = `https://api.themoviedb.org/3/tv/${item.id}}?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US`\r\n                const res = axios.get(endPoint)\r\n                .then(data => {\r\n                    console.log(data)\r\n                if (item.id ===data.data.id){\r\n                    data.data.createdAt = item.createdAt\r\n                    }\r\n                    this.setState({ list: [...this.state.list, data.data] })\r\n\r\n                })\r\n                .catch(err => console.log(err))\r\n                }\r\n                \r\n            })\r\n    }\r\n\r\n    // handleDuplicate = (listOfDuplicates) => {\r\n    //     console.log(listOfDuplicates.length)\r\n        \r\n    //     if (listOfDuplicates.length !== 0){\r\n    //         const unique = Array.from(new Set(listOfDuplicates.map(a => a.id)))\r\n    //         .map(id => {\r\n    //         return listOfDuplicates.find(a => a.id === id)\r\n    //         })\r\n\r\n    //         this.setState({ uniqueList: unique })\r\n    //         console.log(unique)\r\n    //     }\r\n    // }\r\n    //handle from list\r\n    handleRemoveFromList = (id) => { \r\n        const list = JSON.parse(localStorage.getItem('favourites'))\r\n        const updatedList = list.filter(item => item.id !== id)\r\n        const removed = !this.state.removed\r\n        localStorage.setItem('favourites', JSON.stringify(updatedList))\r\n        console.log(updatedList)\r\n        this.setState({ removed: removed })\r\n\r\n    } \r\n   \r\n    componentWillMount(){\r\n        this.handleGetStoredMovies()\r\n        \r\n    }\r\n    render(){\r\n    return (\r\n        <main className={classes.Favourite}>\r\n            <header>\r\n                <h1>Your Favourite List</h1>\r\n                <img src={love} alt=\"love\"/>\r\n            </header>\r\n            {this.state.list.length === 0 ? <Spinner /> :\r\n            <section className={classes.List}>\r\n                {this.state.list.map((item, i) => (\r\n                    <div>\r\n                    <Movie \r\n                    key={item.id + i}\r\n                    name={item.original_name || item.original_title}\r\n                    year={item.release_date || item.first_air_date}\r\n                    rating={item.vote_average}\r\n                    poster={item.poster_path}\r\n                    id={item.id}\r\n                    love=\"remove\"\r\n                    \r\n                    />\r\n                    <div className={classes.Details}>\r\n                        <h4>Added <strong>{moment(item.createdAt).from()}</strong></h4>\r\n                        <img \r\n                        src={trash}\r\n                        alt=\"remove\"\r\n                        onClick={() => this.handleRemoveFromList(item.id)}\r\n                        />\r\n\r\n                    </div>\r\n                    </div>\r\n                ))}\r\n            </section>\r\n            }\r\n        </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favourite\r\n","C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Banner\\Banner.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Containers\\Layout\\WatchPage\\WatchPage.jsx",["203","204","205"],"import React from 'react'\r\nimport classes from './WatchPage.css'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Spinner from '../../../UI/Spinner'\r\nimport Flair from '../../../UI/Flair/Flair'\r\nimport Button from '../../../UI/Button/Button'\r\nimport Modal from '../../../Components/Modal/Modal'\r\nimport LoadingProgress from '../../../UI/LoadingProgress/LoadingProgress'\r\nclass Watchpage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            itemContent: {},\r\n            itemId: null,\r\n            itemType: '',\r\n            posterEndPoint: 'https://image.tmdb.org/t/p/w500/',\r\n            trailerEmbed: 'https://www.youtube.com/embed/',\r\n            trailerKey: null,\r\n            showModal: false\r\n        }\r\n    }\r\n    //extracting the id and the type from the search query\r\n    handleGettingIdAndType = () => {\r\n        const query = new URLSearchParams(this.props.location.search)\r\n        let itemId = '', itemType = ''\r\n        for (let param of query.entries()){\r\n            if (param[0] === 'itemId'){\r\n                this.setState({ itemId: +param[1] })\r\n                itemId = +param[1]\r\n            }\r\n            if (param[0] === 'itemType'){\r\n                this.setState({ itemType: param[1] })\r\n                itemType = param[1]\r\n            }\r\n        }\r\n        this.handleFetchItems(itemType, itemId)\r\n\r\n    }\r\n    //fetching\r\n    handleFetchItems = (type, id) => {\r\n         \r\n\r\n            console.log(this.state)\r\n            if (type === 'movie'){\r\n                const endPoint = `https://api.themoviedb.org/3/movie/${id}}?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US`\r\n                const res = axios.get(endPoint)\r\n                .then(data => {\r\n                    \r\n                    this.setState({ itemContent: data.data })\r\n                        const trailerEndpoint = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}`\r\n                        axios.get(trailerEndpoint)\r\n                        .then(res => {\r\n                            console.log(res)\r\n                            this.setState({ trailerKey: res.data.results[0].key })\r\n                        })\r\n                            \r\n                        .catch(err => console.log(err))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n    \r\n                }\r\n            else if (type === 'tv') {\r\n                console.log('fetching tv')\r\n    \r\n                const endPoint = `https://api.themoviedb.org/3/tv/${id}}?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}&language=en-US`\r\n                const res = axios.get(endPoint)\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.setState({ itemContent: data.data })\r\n                    const trailerEndpoint = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_PUBLIC_API_KEY}`\r\n                        axios.get(trailerEndpoint)\r\n                        .then(res => {\r\n                            console.log(res)\r\n                            this.setState({ trailerKey: res.data.results[0].key })\r\n                        })\r\n                            \r\n                        .catch(err => console.log(err))\r\n    \r\n                })\r\n                .catch(err => console.log(err))\r\n                }\r\n    }\r\n    componentDidMount = () =>{\r\n        this.handleGettingIdAndType()\r\n    }\r\n    displayTrailer = () => {\r\n        const newVal = !this.state.showModal\r\n\r\n        this.setState({ showModal: newVal })\r\n  \r\n      }\r\n\r\n    render(){\r\n        const item = this.state.itemContent\r\n        const poster = this.state.posterEndPoint + item.poster_path\r\n        const year = item.first_air_date || item.release_date\r\n        const numberOfEpisodes =  item.number_of_episodes && item.number_of_episodes + ' Episodes'\r\n        const movieGenre = item.genres && item.genres[0].name\r\n        const flairGenres = item.genres && item.genres\r\n        const spokenLanguage = item.spoken_languages\r\n        const overView = item.overview && item.overview\r\n        const trailer = this.state.trailerKey && this.state.trailerEmbed + this.state.trailerKey\r\n        const voteAverage = item.vote_average && item.vote_average * 10\r\n        console.log(item)\r\n        console.log(trailer)\r\n\r\n        return (\r\n            item !== {}?\r\n            <main className={classes.Watchpage}>\r\n                {this.state.showModal? <Modal displayTrailer={this.displayTrailer} trailerURL={trailer}/>: null}\r\n                <section className={classes.Head}>\r\n                    <h1>{item.name || item.title}</h1>\r\n                    <div className={classes.HeadDetails}>\r\n                        <h3>\r\n                            <span className={classes.year}>{String(year).substr(0, 4)} </span>\r\n                            •\r\n                            <span className={classes.episode}> {this.state.itemType === 'tv'? numberOfEpisodes: movieGenre} </span>\r\n                            •\r\n                            <span className={classes.language}> {item.spoken_languages && item.spoken_languages[0].english_name}</span>\r\n                        </h3>\r\n                        <LoadingProgress value={voteAverage}/>\r\n                    </div>\r\n                </section>\r\n                <section className={classes.Body}>\r\n                    <h4>Overview</h4>\r\n                    <p>{overView}</p>\r\n                    <section className={classes.GenresFlairs}>\r\n                        {flairGenres && flairGenres.map(genre => (\r\n                            <Flair key={genre.id}>{genre.name}</Flair>\r\n                        ))}\r\n                    </section>\r\n                    <section className={classes.Actions}>\r\n                        <Button \r\n                        shadow=\"2px 2px 50px rgba(255, 255, 255, 0.513)\"\r\n                        displayTrailer={this.displayTrailer}\r\n                        >Watch Trailer</Button>\r\n                    </section>\r\n                </section>\r\n                \r\n                <section className={classes.Poster}>\r\n                    <div className={classes.Layer}></div>\r\n                    <img src={poster} alt=\"poster\"/>\r\n                </section>\r\n            </main>: <Spinner />\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(Watchpage)","C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Flair\\Flair.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\Button\\Button.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\UI\\LoadingProgress\\LoadingProgress.jsx",[],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\Movies\\Languages\\Languages.jsx",["206","207"],"C:\\Users\\uw\\Desktop\\site\\picste\\src\\Components\\ByLanguages\\ByLanguages.jsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"216","line":1,"column":37,"nodeType":"214","messageId":"215","endLine":1,"endColumn":46},{"ruleId":"212","severity":1,"message":"217","line":3,"column":35,"nodeType":"214","messageId":"215","endLine":3,"endColumn":41},{"ruleId":"212","severity":1,"message":"218","line":3,"column":43,"nodeType":"214","messageId":"215","endLine":3,"endColumn":48},{"ruleId":"212","severity":1,"message":"219","line":3,"column":50,"nodeType":"214","messageId":"215","endLine":3,"endColumn":54},{"ruleId":"212","severity":1,"message":"220","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"216","line":1,"column":37,"nodeType":"214","messageId":"215","endLine":1,"endColumn":46},{"ruleId":"212","severity":1,"message":"219","line":2,"column":50,"nodeType":"214","messageId":"215","endLine":2,"endColumn":54},{"ruleId":"212","severity":1,"message":"221","line":43,"column":13,"nodeType":"214","messageId":"215","endLine":43,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"219","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"223","line":18,"column":13,"nodeType":"224","endLine":22,"endColumn":15},{"ruleId":"212","severity":1,"message":"219","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":14},{"ruleId":"212","severity":1,"message":"225","line":8,"column":12,"nodeType":"214","messageId":"215","endLine":8,"endColumn":21},{"ruleId":"212","severity":1,"message":"226","line":10,"column":11,"nodeType":"214","messageId":"215","endLine":10,"endColumn":18},{"ruleId":"212","severity":1,"message":"227","line":12,"column":11,"nodeType":"214","messageId":"215","endLine":12,"endColumn":31},{"ruleId":"212","severity":1,"message":"228","line":16,"column":11,"nodeType":"214","messageId":"215","endLine":16,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"216","line":1,"column":37,"nodeType":"214","messageId":"215","endLine":1,"endColumn":46},{"ruleId":"212","severity":1,"message":"229","line":30,"column":15,"nodeType":"214","messageId":"215","endLine":30,"endColumn":18},{"ruleId":"212","severity":1,"message":"230","line":4,"column":11,"nodeType":"214","messageId":"215","endLine":4,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":22,"column":23,"nodeType":"224","endLine":22,"endColumn":75},{"ruleId":"212","severity":1,"message":"233","line":25,"column":13,"nodeType":"214","messageId":"215","endLine":25,"endColumn":27},{"ruleId":"222","severity":1,"message":"223","line":26,"column":12,"nodeType":"224","endLine":26,"endColumn":60},{"ruleId":"212","severity":1,"message":"234","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"212","severity":1,"message":"235","line":10,"column":15,"nodeType":"214","messageId":"215","endLine":10,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":20,"column":8,"nodeType":"238","endLine":20,"endColumn":10,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":18,"column":8,"nodeType":"238","endLine":18,"endColumn":10,"suggestions":"241"},{"ruleId":"222","severity":1,"message":"223","line":21,"column":13,"nodeType":"224","endLine":21,"endColumn":61},{"ruleId":"212","severity":1,"message":"242","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":32},{"ruleId":"212","severity":1,"message":"243","line":10,"column":9,"nodeType":"214","messageId":"215","endLine":10,"endColumn":21},{"ruleId":"212","severity":1,"message":"244","line":10,"column":17,"nodeType":"214","messageId":"215","endLine":10,"endColumn":24},{"ruleId":"212","severity":1,"message":"245","line":8,"column":11,"nodeType":"214","messageId":"215","endLine":8,"endColumn":28},{"ruleId":"212","severity":1,"message":"219","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":9,"column":11,"nodeType":"214","messageId":"215","endLine":9,"endColumn":18},{"ruleId":"212","severity":1,"message":"228","line":15,"column":11,"nodeType":"214","messageId":"215","endLine":15,"endColumn":31},{"ruleId":"212","severity":1,"message":"216","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"229","line":45,"column":23,"nodeType":"214","messageId":"215","endLine":45,"endColumn":26},{"ruleId":"212","severity":1,"message":"229","line":59,"column":23,"nodeType":"214","messageId":"215","endLine":59,"endColumn":26},{"ruleId":"212","severity":1,"message":"229","line":47,"column":23,"nodeType":"214","messageId":"215","endLine":47,"endColumn":26},{"ruleId":"212","severity":1,"message":"229","line":67,"column":23,"nodeType":"214","messageId":"215","endLine":67,"endColumn":26},{"ruleId":"212","severity":1,"message":"246","line":101,"column":15,"nodeType":"214","messageId":"215","endLine":101,"endColumn":29},{"ruleId":"212","severity":1,"message":"216","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"247","line":12,"column":23,"nodeType":"214","messageId":"215","endLine":12,"endColumn":35},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'elements' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showGenre' is assigned a value but never used.","'menuRef' is assigned a value but never used.","'handleShowGenreLists' is assigned a value but never used.","'handleHideGenreLists' is assigned a value but never used.","'res' is assigned a value but never used.","'imageBoiler' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'loadingTrailer' is assigned a value but never used.","'Dropdown' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFetchGenres'. Either include it or remove the dependency array.","ArrayExpression",["250"],"React Hook useEffect has a missing dependency: 'props.ratingAvg'. Either include it or remove the dependency array.",["251"],"'useRef' is defined but never used.","'addedMessage' is assigned a value but never used.","'setMove' is assigned a value but never used.","'integratedClasses' is assigned a value but never used.","'spokenLanguage' is assigned a value but never used.","'setLanguages' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [handleFetchGenres]",{"range":"256","text":"257"},"Update the dependencies array to be: [props.ratingAvg]",{"range":"258","text":"259"},[729,731],"[handleFetchGenres]",[689,691],"[props.ratingAvg]"]